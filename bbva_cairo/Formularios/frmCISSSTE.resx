<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="abdCPrestH.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAC9eF8DvnhfGL54Xx++eF8fvnhfH754Xx++eF8fvnhfH754Xx++eF8fvnhfH754Xx++eF8fvnhfH754
        Xxi+d14CvXZfGL12X7+9dl/kvnhg4r94YOK9dl/ivXZf4r54YOK+eGDivXZf4r12X+K/eGDivnhg4r12
        X+S9dl+/vXZeGM2iaR/NomnizqRp/7iCXf+tcVf/yp5n/82iZ/+1eVf/tXlX/86iZ//Ln2f/rXFX/7iC
        Xv/OpGn/zaNp4s2iaR/f1XYK3M1zp9Cva/+fbFH/k1xK/8qvav+vpYX/Z3Ka/2l0m/+zroj/wZlk/5JZ
        Sv+hclL/1Ltt/9Ozbafk5nkJ1rxvANrGcn/CjmP/kFJI/5BUR/+MhYr/OYnh/x+O9/8fj/f/OYrh/35m
        gf+NT0b/lV5L/8qkaP/BgGF/w4djANa9bwDaxnJ/wo9j/5FTSP+HU1H/RHzK/x2d+/8ghvX/IYT1/x2d
        +/9Adcf/hlBQ/5ZfSv/KpWj/woJhf8SJYwDWvW8A2sZyf8KPY/+SU0f/gVFY/y2C4f8dofv/IIb2/yCG
        9v8dofv/LYHg/4FQV/+WX0r/yqVo/8KCYX/EiWMA1r5vANrHcn/Cj2P/kVNI/4dTUf9EfMr/HZ37/yGD
        9f8hhvX/HZ37/0B1x/+GUFD/ll9K/8qmaP/CgmF/xIljANKybQDWu29/wIlh/5FTSP+QVEf/iX+J/ziI
        4v8fj/j/H4/4/zeF4P9+ZoL/jlBG/5RdS//HnGb/wX9hf8KEYgC6b10JwHxgp7t2Xv+YWEz/j1JI/7Ny
        W/+dc3r/YmOX/2Jkl/+dcnr/sW1a/49SR/+YWkz/vHhe/712X6e9cVwJzaNpH82jaeLNo2n/wJhi/7mT
        X//Lomj/zqJn/7+VXf+/lV3/zqJn/8uiaP+5k1//wJhi/82jaf/No2nizaNpH93Ocxndz3PB3c9z9t7P
        dP/cy3P/2cVx/9nFcf/axnL/2sZy/9nFcf/ZxXH/3Mtz/97PdP/dz3P33c9zwdzPcxjczHMC3M1zF9zN
        c1PcznO6179w9sqbZ//ChGL/wYBh/8GAYf/ChGL/ypln/9e+cPfcznO+3MxyWNvNcxjbzXMCAAAAANrL
        cQD8/aMA281zEtzNc2LZxnHK0a5s+saOZP/GjmT/0a1r+9nFcc3czXJm3MxzFNzTcwDczXMAAAAAAAAA
        AAAAAAAAAAAAANzPcwDby3EA3dF0G9zOdHPZxnHL2cZxzNzOdHfd0HMe3tN1Ad3RdAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAN3RcwDc0XQC3dFzFt3Rcxbc0nQC3dFzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAACAAQAAgAEAAIABAACAAQAAAAAAAAAAAAAAAAAAAAAAAOAH
        AAD4DwAA/D8AAA==
</value>
  </data>
</root>